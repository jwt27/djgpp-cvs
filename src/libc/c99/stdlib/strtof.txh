@node strtof, string
@findex strtof
@subheading Syntax

@example
#include <stdlib.h>

float strtof(const char *s, char **endp);
@end example

@subheading Description

This function converts as many characters of @var{s} that look like a
floating point number into that number.  The floating point number may
also take the form of a hex floating point number (case-insensitively)
like this [+|-]0xH.HHHp[+|-]DDD.  It also recognises (case-insensitively)
``Inf'', ``Infinity'', ``NaN'', ``NaN(@var{optional decimal-number})'',
``NaN(@var{optional octal-number})'' and ``NaN(@var{optional hex-number})''.
If @var{endp} is not a null pointer, a pointer to the first unconverted
character will be stored in the location pointed to by @var{endp}.  

@subheading Return Value

The value represented by @var{s}.

If @var{s} is ``Inf'' or ``Infinity'', with any variations of case and
optionally prefixed with ``+'' or ``-'', the return value is
@code{INFINITY} (if no prefix or a ``+'' prefix) or @code{-INFINITY}
(if the prefix is ``-'').

If @var{s} is ``NaN'' or ``NaN()'', with any variations of case and
optionally prefixed with ``+'' or ``-'', the return value is
@code{NAN}.  If the prefix is ``-'' the sign bit in the NaN will be
set to 1.

If @var{s} is ``NaN(@var{decimal-number})'', ``NaN(@var{octal-number})''
or ``NaN(@var{hex-number})'', with any variations of case
and optionally prefixed with ``+'' or ``-'', the return value is a NaN
with the mantissa bits set to the lower 23 bits
of @var{decimal-number}, @var{octal-number} or @var{hex-number}
(the mantissa for floats consists of 23 bits).  Use at most 8
hexadecimal digits in @var{hex-number} or the internal conversion will
overflow, which results in a mantissa with all bits set.  If the bit
pattern given is 0 (which won't work as a representation of a NaN)
@code{NAN} will be returned.  If the prefix is ``-'' the sign bit in
the NaN will be set to 1.  Testing shows that SNaNs might be converted
into QNaNs (most significant bit will be set in the mantissa).

If a number represented by @var{s} doesn't fit into the range of values
representable by the type @code{float}, the function returns either
@code{-HUGE_VALF} (if @var{s} begins with the character @code{-}) or
@code{+HUGE_VALF}, and sets @code{errno} to @code{ERANGE}.

@subheading Portability

@port-note ansi-c99 Support for ``Inf'', ``Infinity'', ``NaN'' and
``NaN(@dots{})'' was standardised in ANSI C99.

@portability !ansi-c89, ansi-c99, !posix-1003.2-1992, posix-1003.1-2001

@subheading Example

@example
char buf[] = "123ret";
char buf2[] = "0x123ret";
char buf3[] = "NAN(123)";
char buf4[] = "NAN(0x123)";
char buf5[] = "0x1234567.89ABCDefP+12";
char *bp;
float x, x2, x3, x4;

x = strtof(buf, &bp);
x2 = strtof(buf2, &bp);
x3 = strtof(buf3, &bp);
x4 = strtof(buf4, &bp);
x5 = strtod(buf5, &bp);
@end example
