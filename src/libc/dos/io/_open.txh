@node _open, file system
@findex _open
@subheading Syntax

@example
#include <io.h>

int _open(const char *path, int attrib);
@end example

@subheading Description

This is a direct connection to the MS-DOS open function call, int 0x21,
%ah = 0x3d, on versions of DOS earlier than 7.0. On DOS version 7.0 or
later @code{_open} calls function int 0x21, %ax = 0x6c00. When long
file names are supported, @code{_open} calls function 0x716c of Int
0x21.

On FAT32 file systems file sizes up to 2^32-2 are supported. Note
that WINDOWS 98 has a bug which only lets you create these big files
if LFN is enabled. In plain DOS mode it plainly works.

The file is set to binary mode.

The @var{attrib} parameter is a combination of one or more bits from the
following:

@table @code
@item O_RDONLY
open for read only

@item O_WRONLY
open for write only

@item O_RDWR
open for read and write

@item O_NOINHERIT
file handle is not inherited by child processes

@item SH_COMPAT
open in compatibility mode

@item SH_DENYRW
deny requests by other processes to open the file for eaither reading or
writing

@item SH_DENYWR
deny requests to open the file for writing

@item SH_DENYRD
deny requests to open the file for reading

@item SH_DENYNO
deny-none mode: allow other processes to open the file if their open
mode doesn't conflict with the open mode of this process
@end table

This function can be hooked by File System Extensions
(@pxref{File System Extensions}).  If you don't want this, you should
use @code{_dos_open} (@pxref{_dos_open}) (but note that the latter
doesn't support long file names).

@subheading Return Value

The new file descriptor, else -1 on error.

@subheading Portability

@portability !ansi, !posix
