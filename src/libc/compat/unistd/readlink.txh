@node readlink, io
@findex readlink
@subheading Syntax

@example
#include <unistd.h>

int readlink(const char *filename, char *buffer, size_t size);
@end example

@subheading Description
MSDOS doesn't support symbolic links but DJGPP emulates them.
This function checks if @var{filename} is a DJGPP symlink and
the file name that the links points to is copied into buffer,
up to maximum @var{size} characters.  
Portable applications should not assume that @var{buffer} is
terminated with @code{'\0'}.

@subheading Return Value

Number of copied characters; value -1 is returned in case of
error and @code{errno} is set.  When value returned is equal to 
@var{size}, you cannot determine if there was enough room to 
copy whole name.  So increase @var{size} and try again.

@subheading Portability

@portability !ansi, !posix

@subheading Example

@example
char buf[FILENAME_MAX + 1];
if (readlink("/dev/env/DJDIR/bin/sh.exe", buf, FILENAME_MAX) == -1)
   if (errno == EINVAL)
      puts("/dev/env/DJDIR/bin/sh.exe is not a symbolic link.");
@end example

