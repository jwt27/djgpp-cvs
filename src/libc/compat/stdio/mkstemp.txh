@node mkstemp, file system
@findex mkstemp
@subheading Syntax

@example
#include <stdlib.h>

int mkstemp(char *template);
@end example

@subheading Description

@var{template} is a file specification that ends with six trailing
@code{X} characters.  This function replaces the @code{XXXXXX} with a
set of characters such that the resulting file name names a nonexistant
file.  It then creates and opens the file in a way which guarantees that
no other process can access this file.

Note that since MS-DOS and file systems that lack of @acronym{LFN} support
are limited to eight characters for the file name, and since none of the @code{X}'s
get replaced by a dot, you can only have two additional characters before
the @code{X}'s.  But if the file systems offers @acronym{LFN} support no limitation
concerning the number of characters before the @code{X}'s is given and the
created file names will be @acronym{POSIX} compliant.

Note also that the path you give will be modified in place.

@subheading Return Value

The open file descriptor.

@subheading Portability

@port-note posix To follow the Single Unix Specification, djgpp 2.04 has now
the prototype in @code{<stdlib.h>}.  To keep backward compatibility, the
prototype is also kept in @code{<stdio.h>} but its usage is deprecated.

@portability !ansi, posix

@subheading Example

@example
char path[100];
strcpy(path, _USE_LFN ? "/tmp/c_compilerXXXXXX" : "/tmp/ccXXXXXX");
int fd = mkstemp(path);
@end example

