@node l64a, string
@findex l64a
@subheading Syntax

@example
#include <stdlib.h>

char *l64a(long value);
@end example

@subheading Description

This function takes a @code{long} argument and returns a pointer to its
radix-64 representation.  Negative values are supported as well.
The resulting string can be turned back into a @code{long} value by the
@code{a64l} function (@pxref{a64l}).

@subheading Return Value

A pointer to a static buffer containing the radix-64 representation of
@var{value}.  Subsequent calls will overwrite the contents of this buffer.
If @var{value} is @code{0L}, this function returns an empty string.

@subheading Radix-64
@cindex radix-64

The radix-64 @sc{ascii} representation is a notation whereby 32-bit integers
are represented by up to 6 @sc{ascii} characters; each character represents
a single radix-64 digit.  Radix-64 refers to the fact that each digit in this
representation can take 64 different values.
If the @code{long} type is more than 32 bits in size, only the low-order
32 bits are used.
The characters used to represent digits are @samp{.} (dot) for 0, @samp{/}
for 1, @samp{0} through @samp{9} for 2 to 11, @samp{A} through @samp{Z} for
12 to 37, and @samp{a} through @samp{z} for 38 to 63.

Note that this is @emph{not} the same encoding used by either uuencode or the
MIME base64 encoding.

@subheading Portability

@port-note posix This function is new to the Posix 1003.1-200x draft
@portability !ansi, posix
