@node confstr, posix
@findex confstr
@subheading Syntax

@example
#include <unistd.h>

size_t confstr(int name, char *buf, size_t len);
@end example

@subheading Description

This function stores various system-dependent configuration values
in @var{buf}.  @var{name} is one of the following:

@table @code

@item _CS_PATH

Returns a path to the standard POSIX utilities.

@item _CS_POSIX_V6_ILP32_OFF32_CFLAGS

Returns the compile-time flags required to build an application using 32-bit
@code{int}, @code{long}, pointer, and @code{off_t} types.

@item _CS_POSIX_V6_ILP32_OFF32_LDFLAGS

Returns the link-time flags required to build an application using 32-bit
@code{int}, @code{long}, pointer, and @code{off_t} types.

@item _CS_POSIX_V6_ILP32_OFF32_LIBS

Returns the set of libraries required to build an application using 32-bit
@code{int}, @code{long}, pointer, and @code{off_t} types.

@end table

If @var{len} is not zero and @var{name} has a defined value, that value
is copied into @var{buf} and null terminated.  If the length of the string
to be copied plus the null terminator is greater than @var{len} bytes,
the string is truncated to @math{@var{len}-1} bytes and the result is
null terminated.

If @var{len} is zero, nothing is copied into @var{buf} and the size of the
buffer required to store the string is returned.

@subheading Return Value

If @var{name} has a defined value, the minimum size of the buffer required
to hold the string including the terminating null is returned.  If this value
is greater than @var{len}, then @var{buf} is truncated.

If @var{name} is valid but does not have a defined value, zero is returned.

If @var{name} is invalid, zero is returned and @code{errno} is set to
@code{EINVAL}.

@subheading Portability

@portability !ansi, posix

@subheading Example

@example
char *path;
size_t path_len;

path_len = confstr (_CS_PATH, NULL, 0);
path = malloc(path_len);
confstr(_CS_PATH, path, path_len);
@end example

