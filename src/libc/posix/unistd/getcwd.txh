@node getcwd, file system
@findex getcwd
@subheading Syntax

@example
#include <unistd.h>

char *getcwd(char *buffer, int max);
@end example

@subheading Description

Get the current directory.  The return value includes the drive
specifier.

If @var{buffer} is @code{NULL}, @code{getcwd} allocates
a buffer of size @var{max} with @code{malloc}.  This is an extension
of the POSIX standard, which is compatible with the behaviour of glibc
(the C library used on Linux).

This call fails if more than @var{max} characters are required
to specify the current directory.

@subheading Return Value

The buffer, either @var{buffer} or a newly-allocated buffer, or
@code{NULL} on error.

@subheading Portability

@port-note posix The behaviour when @var{buffer} is @code{NULL} is unspecified for POSIX.

@portability !ansi, posix

@subheading Example

@example
char *buf = (char *)malloc(PATH_MAX);
if (buf && getcwd(buf, PATH_MAX))
@{
  printf("cwd is %s\n", buf);
  free(buf);
@}
@end example

