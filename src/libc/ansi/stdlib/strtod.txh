@node strtod, string
@findex strtod
@subheading Syntax

@example
#include <stdlib.h>

double strtod(const char *s, char **endp);
@end example

@subheading Description

This function converts as many characters of @var{s} as look like a
floating point number into that number.  It also recognises
(case-insensitively) ``Inf'', ``Infinity'', ``NaN'' and
``NaN(@var{optional hex-number})''.  If @var{endp} is not a null
pointer, a pointer to the first unconverted character will be stored
in the location pointed to by @var{endp}.

@subheading Return Value

The value represented by @var{s}.

If @var{s} is ``Inf'' or ``Infinity'', with any variations of
case and optionally prefixed with ``+'' or ``-'', the return value is
@code{INFINITY} (if no prefix or a ``+'' prefix) or @code{-INFINITY}
(if the prefix is ``-'').

If @var{s} is ``NaN'' or ``NaN()'', with any variations of case
and optionally prefixed with ``+'' or ``-'', the return value is
@code{(double)NAN}.  If the prefix is ``-'' the sign bit in the NaN
will be set to 1.

If @var{s} is ``NaN(@var{hex-number})'', with any variations of
case and optionally prefixed with ``+'' or ``-'', the return value is
a NaN with the mantissa bits set to the lower 52 bits of
@var{hex-number} (the mantissa for doubles consists of 52 bits).  Use
at most 16 hexadecimal digits in @var{hex-number} or the internal
conversion will overflow, which results in a mantissa with all bits
set.  If the bit pattern given is 0 (which won't work as a
representation of a NaN) @code{(double)NAN} will be returned.  If the
prefix is ``-'' the sign bit in the NaN will be set to 1.  Testing
shows that SNaNs might be converted into QNaNs (most significant bit
will be set in the mantissa).  

If a number represented by @var{s} doesn't fit into the range of values
representable by the type @code{double}, the function returns either
@code{-HUGE_VAL} (if @var{s} begins with the character @code{-}) or
@code{+HUGE_VAL}, and sets @code{errno} to @code{ERANGE}.

@subheading Portability

@port-note ansi-c99 Support for ``Inf'', ``Infinity'', ``NaN'' and
``NaN(@dots{})'' was standardised in ANSI C99.

@portability ansi, posix

@subheading Example

@example
char *buf = "123ret";
char *bp;
double x = strtod(buf, &bp);
@end example

